{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","tooglemode","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","newtext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newString","replace","trim","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","isRequired","aboutText","defaultProps","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c248c8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* switch to toogle modes */}\r\n          <div className={`form-check form-switch mx-3 text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick = {props.tooglemode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"  >\r\n              Change Mode\r\n            </label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"set title\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text changed to Upper Case\",\"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Text changed to Lower Case\",\"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"Text Cleared\",\"success\");\r\n  };\r\n  const CopyText = () => {\r\n    let newtext = document.getElementById(\"myBox\");\r\n    newtext.select();\r\n    navigator.clipboard.writeText(newtext.value)\r\n    props.showAlert(\"Text copied to clipboard\",\"success\");\r\n  };\r\n  \r\n  const handleClearSpaces = () => {\r\n    let newString = text.replace(/\\s+/g, \" \").trim();\r\n    setText(newString);\r\n    props.showAlert(\"Extra spaces has been removed\",\"success\");\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // setText(\"new text\");\r\n  return (\r\n    <>\r\n      <div style = {{color:props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style = {{backgroundColor:props.mode === 'dark'?'grey':'white',\r\n             color:props.mode === 'light'?'black':'white'}}\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-3 mx-1\" onClick={handleUpClick}>\r\n            Convert to UpperCase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLoClick}>\r\n            Convert to LowerCase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-1\" onClick={CopyText}>\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-1\"\r\n            onClick={handleClearSpaces}\r\n          >\r\n            Remove Spaces\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-1\"\r\n            onClick={handleClearClick}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\" style = {{color:props.mode === 'dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>You will take {text.split(\" \").length * 0.008} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{(text.length>0)?text:\"Enter something in the textbox to preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize =(word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        \r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const tooglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#0d0f45\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Darkmode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Lightmode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} tooglemode={tooglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}